<?xml version='1.0' ?>
<!DOCTYPE html>
<html xmlns='http://www.w3.org/1999/xhtml'>
    <head>
        <title>Teapot</title>

        <link href='http://fonts.googleapis.com/css?family=Droid+Sans:400,700' rel='stylesheet' type='text/css' />
        <link href='../css/style.css' rel='stylesheet' type='text/css' />
        <style>
            canvas {
                cursor: move;
            }
        </style>
    </head>

    <body>
        <h1>Rendering a Teapot using Canvas</h1>
        <canvas width='600' height='600'></canvas>
        <div><strong>Drag</strong> moves. <strong>Mouse wheel</strong> zooms.</div>

        <script src='../libs/sylvester.js' type='application/javascript'></script>
        <script src='../libs/helper.js' type='application/javascript'></script>
        <script src='teapot.js' type='application/javascript'></script>
        <script type='application/javascript'>
            <![CDATA[
                var ctx = document.querySelector( 'canvas' ).getContext( '2d' );

                var project = [
                    [ 1, 0,  0,   0 ],
                    [ 0, 1,  0,   0 ],
                    [ 0, 0, -0.2, 0 ],
                    [ 0, 0,  45,  1 ]
                ];

                var render = function ( ctx, vertices, indices, colors, zoom ) {
                    ctx.clearRect( 0, 0, ctx.canvas.width, ctx.canvas.height );

                    for ( var i = 0; i < vertices.length; ++i ) {
                        vertices[ i ][ 0 ] /= vertices[ i ][ 2 ];
                        vertices[ i ][ 1 ] /= vertices[ i ][ 2 ];
                    }
                    // Move by an offset
                    var size = {
                        x: ctx.canvas.width,
                        y: ctx.canvas.height
                    };
                    vertices = $M( vertices ).x( $M( [
                        [ ( size.x / 4 ) * zoom, 0,          0, 0 ],
                        [ 0,          ( size.y / 4 ) * zoom, 0, 0 ],
                        [ 0,          0,          1, 0 ],
                        [ size.x / 2, size.y / 2, 0, 1 ]
                    ] ) ).elements;

                    indices.forEach( function( value, i ) {
                        var a = vertices[ value[ 0 ] ];
                        var b = vertices[ value[ 1 ] ];
                        var c = vertices[ value[ 2 ] ];

                        if ( ccw( a, b, c ) > 0 ) {
                            drawTriangle( ctx, a, b, c, colors[ i ], 'black' );
                        }
                    } );
                };

                var zoom = 1;
                vertices = $M( vertices ).x(
                    $M( rotateX( -Math.PI / 4 ) )
                ).elements;
                setInterval( function () {
                    render(
                        ctx,
                        $M( vertices ).x( $M( project ) ).elements,
                        indices,
                        colors,
                        zoom
                    );
                }, 17 );

                var mouse;
                var colors = [];
                indices.sort( function ( a, b ) {
                    var aa = vertices[ a[ 0 ] ];
                    var ab = vertices[ a[ 1 ] ];
                    var ac = vertices[ a[ 2 ] ];

                    var ba = vertices[ b[ 0 ] ];
                    var bb = vertices[ b[ 1 ] ];
                    var bc = vertices[ b[ 2 ] ];

                    aAvg = ( aa[ 2 ] + ab[ 2 ] + ac[ 2 ] ) / 3;
                    bAvg = ( ba[ 2 ] + bb[ 2 ] + bc[ 2 ] ) / 3;

                    return aAvg - bAvg;
                } );
                indices.forEach( function( value, i ) {
                    var a = vertices[ value[ 0 ] ];
                    var b = vertices[ value[ 1 ] ];
                    var c = vertices[ value[ 2 ] ];

                    if ( ccw( a, b, c ) > 0 ) {
                        colors[ i ] = flatShading( a, b, c );
                    }
                } );
                document.onmousedown = function ( e ) {
                    if ( e.which == 1 ) {
                        mouse = {
                            x: e.clientX,
                            y: e.clientY
                        };

                        document.onmousemove = function ( e ) {
                            thetaX = -( mouse.y - e.clientY ) / 100;
                            thetaY =  ( mouse.x - e.clientX ) / 100;
                            vertices = $M( vertices ).x(
                                $M( rotateX( thetaX ) ).x(
                                    $M( rotateY( thetaY ) )
                                )
                            ).elements;

                            indices.sort( function ( a, b ) {
                                var aa = vertices[ a[ 0 ] ];
                                var ab = vertices[ a[ 1 ] ];
                                var ac = vertices[ a[ 2 ] ];

                                var ba = vertices[ b[ 0 ] ];
                                var bb = vertices[ b[ 1 ] ];
                                var bc = vertices[ b[ 2 ] ];

                                aAvg = ( aa[ 2 ] + ab[ 2 ] + ac[ 2 ] ) / 3;
                                bAvg = ( ba[ 2 ] + bb[ 2 ] + bc[ 2 ] ) / 3;

                                return aAvg - bAvg;
                            } );
                            indices.forEach( function( value, i ) {
                                var a = vertices[ value[ 0 ] ];
                                var b = vertices[ value[ 1 ] ];
                                var c = vertices[ value[ 2 ] ];

                                if ( ccw( a, b, c ) > 0 ) {
                                    colors[ i ] = flatShading( a, b, c );
                                }
                            } );

                            mouse = {
                                x: e.clientX,
                                y: e.clientY
                            };
                        };
                    }
                };
                document.onmouseup = function () {
                    document.onmousemove = function () {};
                };
                document.onmousewheel = function ( e ) {
                    var delta = e.wheelDeltaY / 10000;
                    if ( ctx.canvas.width * ( zoom + delta ) > 0 && ctx.canvas.height * ( zoom + delta ) > 0 ) {
                        zoom += delta;
                    }
                    return false;
                };
            ]]>
        </script>
    </body>
</html>
