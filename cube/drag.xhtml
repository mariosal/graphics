<?xml version='1.0' ?>
<!DOCTYPE html>
<html xmlns='http://www.w3.org/1999/xhtml'>
    <head>
        <title>3D Cube Dragging</title>

        <link href='http://fonts.googleapis.com/css?family=Droid+Sans' rel='stylesheet' type='text/css' />
        <link href='../css/style.css' rel='stylesheet' type='text/css' />
    </head>

    <body>
        <h1>Draggable 3D cube using Canvas</h1>
        <canvas width='600' height='600'></canvas>

        <script src='../libs/sylvester.js' type='application/javascript'></script>
        <script src='../libs/helper.js' type='application/javascript'></script>
        <script type='application/javascript'>
            <![CDATA[
                var ctx = document.querySelector( 'canvas' ).getContext( '2d' );

                var vertices = [
                    [ -1,  1,  1, 1 ],
                    [  1,  1,  1, 1 ],
                    [  1, -1,  1, 1 ],
                    [ -1, -1,  1, 1 ],
                    [ -1,  1, -1, 1 ],
                    [  1,  1, -1, 1 ],
                    [  1, -1, -1, 1 ],
                    [ -1, -1, -1, 1 ]
                ];
                var indices = [
                    // Front
                    [ 0, 2, 1 ], 
                    [ 0, 3, 2 ],

                    // Back
                    [ 5, 7, 4 ],
                    [ 7, 5, 6 ],

                    // Up
                    [ 5, 4, 1 ],
                    [ 1, 4, 0 ],

                    // Down
                    [ 2, 3, 7 ],
                    [ 7, 6, 2 ],

                    // Left
                    [ 0, 4, 3 ],
                    [ 3, 4, 7 ],

                    // Right
                    [ 1, 6, 5 ],
                    [ 1, 2, 6 ]
                ];
                var project = [
                    [ 1, 0,  0,    0 ],
                    [ 0, 1,  0,    0 ],
                    [ 0, 0, -0.2,  0 ],
                    [ 0, 0,  1,    1 ]
                ];

                var render = function ( ctx, vertices, indices ) {
                    ctx.clearRect( 0, 0, ctx.canvas.width, ctx.canvas.height );

                    for ( var i = 0; i < vertices.length; ++i ) {
                        vertices[ i ][ 0 ] /= vertices[ i ][ 2 ];
                        vertices[ i ][ 1 ] /= vertices[ i ][ 2 ];
                    }
                    // Move by an offset
                    var size = {
                        x: ctx.canvas.width,
                        y: ctx.canvas.height
                    };
                    vertices = $M( vertices ).x( $M( [
                        [ size.x / 4, 0,          0, 0 ],
                        [ 0,          size.y / 4, 0, 0 ],
                        [ 0,          0,          1, 0 ],
                        [ size.x / 2, size.y / 2, 0, 1 ]
                    ] ) ).elements;

                    var color = 0;
                    var colors = [ 'red', 'green', 'blue', 'magenta', 'cyan', 'yellow' ];
                    indices.forEach( function( value ) {
                        var a = vertices[ value[ 0 ] ];
                        var b = vertices[ value[ 1 ] ];
                        var c = vertices[ value[ 2 ] ];

                        if ( ccw( a, b, c ) > 0 ) {
                            drawTriangle( ctx, a, b, c, colors[ Math.floor( color / 2 ) ], colors[ Math.floor( color/ 2 ) ] );
                        }
                        ++color;
                    } );
                };
                setInterval( function () {
                    render(
                        ctx,
                        $M( vertices ).x( $M( project ) ).elements,
                        indices );
                }, 17 );

                var mouse;
                document.onmousedown = function ( e ) {
                    mouse = {
                        x: e.clientX,
                        y: e.clientY
                    };

                    document.onmousemove = function ( e ) {
                        thetaX = -( mouse.y - e.clientY ) / 50;
                        thetaY =  ( mouse.x - e.clientX ) / 50;
                        vertices = $M( vertices ).x(
                            $M( rotateX( thetaX ) ).x(
                                $M( rotateY( thetaY ) )
                            )
                        ).elements;
                        mouse = {
                            x: e.clientX,
                            y: e.clientY
                        };
                    };
                };
                document.onmouseup = function () {
                    document.onmousemove = function () {};
                };
            ]]>
        </script>
    </body>
</html>
